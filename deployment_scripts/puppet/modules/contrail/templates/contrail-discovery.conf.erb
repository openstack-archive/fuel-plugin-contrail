<%-
nodes=scope.function_hiera(['nodes'])
contrail_node_basename=scope.lookupvar('contrail::contrail_node_basename')
priv_ip=Array.new
nodes.each do |node|
case node['role']
  when 'base-os'
    if node['user_node_name'] =~ /^#{contrail_node_basename}-.*/
      priv_ip << node['private_address']
    end
  end
end
-%>
[DEFAULTS]
zk_server_ip=<%= priv_ip.join(',') %>
zk_server_port=2181
listen_ip_addr=0.0.0.0
listen_port=9110
log_local=True
log_file=/var/log/contrail/discovery.log
cassandra_server_list=<%= priv_ip.map{ |ip| "#{ip}:9160" }.join(' ') %>
log_level=SYS_NOTICE

# minimim time to allow client to cache service information (seconds)
ttl_min=300

# maximum time to allow client to cache service information (seconds)
ttl_max=1800

# health check ping interval <=0 for disabling
hc_interval=5

# maximum hearbeats to miss before server will declare publisher out of
# service. 
hc_max_miss=3

# use short TTL for agressive rescheduling if all services are not up
ttl_short=1

# for DNS service, we use fixed policy
# even when the cluster has more than two control nodes, only two of these
# should provide the DNS service
[DNS-SERVER]
policy = fixed

######################################################################
# Other service specific knobs ...
 
# use short TTL for agressive rescheduling if all services are not up
# ttl_short=1
 
# specify policy to use when assigning services
# policy = [load-balance | round-robin | fixed]
######################################################################
