heat_template_version: 2015-04-30

description: >
  HOT template to create a ServiceAppliance:

parameters:
  name:
    type: string
    description: name for the ServiceAppliance
    # required: optional
  fq_name:
    type: string
    description: fq_name for the ServiceAppliance
    # required: optional
  display_name:
    type: string
    description: Display name user configured string(name) that can be updated any time. Used as openstack name.
    # operations: CRUD
    # required: optional
  service_appliance_ip_address:
    type: string
    description: Manegment Ip address of the service-appliance.
    # operations: CRUD
    # required: required
  service_appliance_user_credentials_username:
    type: string
    description: username for the ServiceAppliance
    # operations: CRUD
    # required: optional
  service_appliance_user_credentials_password:
    type: string
    description: password for the ServiceAppliance
    # operations: CRUD
    # required: optional
  service_appliance_properties_key_value_pair_key:
    type: string
    description: key for the ServiceAppliance
    # operations: CRUD
    # required: optional
  service_appliance_properties_key_value_pair_value:
    type: string
    description: value for the ServiceAppliance
    # operations: CRUD
    # required: optional
  # physical_interface_refs:
  #   type: string
  #   description: Reference to physical interface that can be used as (service interface type)left, right, manegement
  #   # required: optional
  # physical_interface_refs_data_interface_type:
  #   type: string
  #   description: interface_type for the ServiceAppliance
  #   # required: optional

resources:
  GlobalSystemConfig:
    type: OS::ContrailV2::GlobalSystemConfig

  ServiceApplianceSet:
    type: OS::ContrailV2::ServiceApplianceSet
    properties:
      global_system_config: { get_resource: GlobalSystemConfig }

  template_ServiceAppliance:
    type: OS::ContrailV2::ServiceAppliance
    properties:
      name: { get_param: name }
      fq_name: { get_param: fq_name }
      display_name: { get_param: display_name }
      service_appliance_ip_address: { get_param: service_appliance_ip_address }
      service_appliance_user_credentials:
        {
          service_appliance_user_credentials_username: { get_param: service_appliance_user_credentials_username },
          service_appliance_user_credentials_password: { get_param: service_appliance_user_credentials_password },
        }
      service_appliance_properties:
        {
          service_appliance_properties_key_value_pair:
            [{
              service_appliance_properties_key_value_pair_key: { get_param: service_appliance_properties_key_value_pair_key },
              service_appliance_properties_key_value_pair_value: { get_param: service_appliance_properties_key_value_pair_value },
            }],
        }
      # physical_interface_refs: [{ get_param: physical_interface_refs }]
      # physical_interface_refs_data:
      #   [{
      #     physical_interface_refs_data_interface_type: { get_param: physical_interface_refs_data_interface_type },
      #   }]
      service_appliance_set: { get_resource: ServiceApplianceSet }

