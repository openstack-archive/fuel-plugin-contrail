heat_template_version: 2015-04-30

description: >
  HOT template to create a FloatingIp:

parameters:
  name:
    type: string
    description: name for the FloatingIp
    # required: optional
  fq_name:
    type: string
    description: fq_name for the FloatingIp
    # required: optional
  floating_ip_address_family:
    type: string
    description: Ip address family of the floating ip, IpV4 or IpV6
    # operations: CRUD
    # required: optional
  floating_ip_is_virtual_ip:
    type: boolean
    description: This floating ip is used as virtual ip (VIP) in case of LBaaS.
    # operations: CRUD
    # required: optional
  # floating_ip_address:
  #   type: string
  #   description: Floating ip address.
  #   # operations: CR
  #   # required: required
  display_name:
    type: string
    description: Display name user configured string(name) that can be updated any time. Used as openstack name.
    # operations: CRUD
    # required: optional
  floating_ip_fixed_ip_address:
    type: string
    description: This floating is tracking given fixed ip of the interface. The given fixed ip is used in 1:1 NAT.
    # operations: CRUD
    # required: optional
  project_refs:
    type: string
    description: Reference to project is which this floating ip was allocated.
    # required: optional

resources:
  NetworkIpam:
    type: OS::ContrailV2::NetworkIpam
    properties:
      name: Something
      project: { get_param: project_refs }

  VirtualNetwork:
    type: OS::ContrailV2::VirtualNetwork
    properties:
      project: { get_param: project_refs }
      network_ipam_refs: [{ get_resource: NetworkIpam }]
      network_ipam_refs_data:
        [{
          network_ipam_refs_data_ipam_subnets:
            [{
              network_ipam_refs_data_ipam_subnets_subnet:
                {
                  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix: 10.0.0.0,
                  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len: 24,
                },
            }],
        }]

  VirtualMachineInterface:
    type: OS::ContrailV2::VirtualMachineInterface
    properties:
      virtual_network_refs: [{ get_resource: VirtualNetwork }]
      project: { get_param: project_refs }

  FloatingIpPool:
    type: OS::ContrailV2::FloatingIpPool
    properties:
      virtual_network: { get_resource: VirtualNetwork }

  template_FloatingIp:
    type: OS::ContrailV2::FloatingIp
    properties:
      name: { get_param: name }
      fq_name: { get_param: fq_name }
      floating_ip_address_family: { get_param: floating_ip_address_family }
      floating_ip_is_virtual_ip: { get_param: floating_ip_is_virtual_ip }
      # floating_ip_address: { get_param: floating_ip_address }
      display_name: { get_param: display_name }
      floating_ip_fixed_ip_address: { get_param: floating_ip_fixed_ip_address }
      project_refs: [{ get_param: project_refs }]
      virtual_machine_interface_refs: [{ get_resource: VirtualMachineInterface }]
      floating_ip_pool: { get_resource: FloatingIpPool }

