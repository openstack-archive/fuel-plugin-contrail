heat_template_version: 2015-04-30

description: >
  HOT template to create a LoadbalancerMember:

parameters:
  name:
    type: string
    description: name for the LoadbalancerMember
    # required: optional
  fq_name:
    type: string
    description: fq_name for the LoadbalancerMember
    # required: optional
  loadbalancer_member_properties_admin_state:
    type: boolean
    description: Administrative up or down.
    # operations: CRUD
    # required: optional
  loadbalancer_member_properties_protocol_port:
    type: number
    description: Destination port for the application on the member.
    # operations: CRUD
    # required: optional
  loadbalancer_member_properties_weight:
    type: number
    description: Weight for load balancing
    # operations: CRUD
    # required: optional
  loadbalancer_member_properties_address:
    type: string
    description: Ip address of the member
    # operations: CRUD
    # required: required
  display_name:
    type: string
    description: Display name user configured string(name) that can be updated any time. Used as openstack name.
    # operations: CRUD
    # required: optional
  project:
    type: string
    description: project for the LoadbalancerPool
    # required: optional

resources:
  LoadbalancerPool:
    type: OS::ContrailV2::LoadbalancerPool
    properties:
      name: Something
      project: { get_param: project }

  template_LoadbalancerMember:
    type: OS::ContrailV2::LoadbalancerMember
    properties:
      name: { get_param: name }
      fq_name: { get_param: fq_name }
      loadbalancer_member_properties:
        {
          loadbalancer_member_properties_admin_state: { get_param: loadbalancer_member_properties_admin_state },
          loadbalancer_member_properties_protocol_port: { get_param: loadbalancer_member_properties_protocol_port },
          loadbalancer_member_properties_weight: { get_param: loadbalancer_member_properties_weight },
          loadbalancer_member_properties_address: { get_param: loadbalancer_member_properties_address },
        }
      display_name: { get_param: display_name }
      loadbalancer_pool: { get_resource: LoadbalancerPool }

