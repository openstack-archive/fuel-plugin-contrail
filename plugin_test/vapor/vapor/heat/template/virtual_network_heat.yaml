heat_template_version: 2015-04-30

description: >
  HOT template to create a VirtualNetwork:

parameters:
  name:
    type: string
    description: name for the VirtualNetwork
    # required: optional
  fq_name:
    type: string
    description: fq_name for the VirtualNetwork
    # required: optional
  virtual_network_properties_allow_transit:
    type: boolean
    description: Enables transitive property for route imports.
    # operations: CRUD
    # required: optional
  virtual_network_properties_vxlan_network_identifier:
    type: number
    description: VxLAN VNI value for this network
    # operations: CRUD
    # required: true
  virtual_network_properties_forwarding_mode:
    type: string
    description: Packet forwarding mode for this virtual network
    # operations: CRUD
    # required: optional
  virtual_network_properties_rpf:
    type: string
    description: Flag used to diable Reverse Path Forwarding(RPF) check for this network
    # operations: CRUD
    # required: optional
  virtual_network_properties_mirror_destination:
    type: boolean
    description: Flag to mark the virtual network as mirror destination network
    # operations: CRUD
    # required: optional
  ecmp_hashing_include_fields_hashing_configured:
    type: boolean
    description: When True, Packet header fields used in calculating ECMP hash is decided by following flags
    # operations: CRUD
    # required: optional
  ecmp_hashing_include_fields_source_ip:
    type: boolean
    description: When false, do not use source ip in the ECMP hash calculation
    # operations: CRUD
    # required: optional
  ecmp_hashing_include_fields_destination_ip:
    type: boolean
    description: When false, do not use destination ip in the ECMP hash calculation
    # operations: CRUD
    # required: optional
  ecmp_hashing_include_fields_ip_protocol:
    type: boolean
    description: When false, do not use ip protocol in the ECMP hash calculation
    # operations: CRUD
    # required: optional
  ecmp_hashing_include_fields_source_port:
    type: boolean
    description: When false, do not use source port in the ECMP hash calculation
    # operations: CRUD
    # required: optional
  ecmp_hashing_include_fields_destination_port:
    type: boolean
    description: When false, do not use destination port in the ECMP hash calculation
    # operations: CRUD
    # required: optional
  display_name:
    type: string
    description: Display name user configured string(name) that can be updated any time. Used as openstack name.
    # operations: CRUD
    # required: optional
  router_external:
    type: boolean
    description: When true, this virtual network is openstack router external network.
    # operations: CRUD
    # required: optional
  # import_route_target_list_route_target:
  #   type: string
  #   description: route_target for the VirtualNetwork
  #   # operations: CRUD
  #   # required: optional
  provider_properties_segmentation_id:
    type: number
    description: segmentation_id for the VirtualNetwork
    # operations: CRD
    # required: optional
  provider_properties_physical_network:
    type: string
    description: physical_network for the VirtualNetwork
    # operations: CRD
    # required: optional
  # route_target_list_route_target:
  #   type: string
  #   description: route_target for the VirtualNetwork
  #   # operations: CRUD
  #   # required: optional
  # export_route_target_list_route_target:
  #   type: string
  #   description: route_target for the VirtualNetwork
  #   # operations: CRUD
  #   # required: optional
  flood_unknown_unicast:
    type: boolean
    description: When true, packets with unknown unicast MAC addres are flooded within the network. Default they are
    # operations: CRUD
    # required: optional
  external_ipam:
    type: boolean
    description: IP address assignment to VM is done statically, outside of (external to) Contrail Ipam. vCenter only
    # operations: CRUD
    # required: optional
  multi_policy_service_chains_enabled:
    type: boolean
    description: Allow multiple service chains within same two networks based on network policy.
    # operations: CRUD
    # required: optional
  is_shared:
    type: boolean
    description: When true, this virtual network is shared with all tenants.
    # operations: CRUD
    # required: optional
  route_table_refs:
    type: string
    description: Refernce to route table attached to this virtual network.
    # required: optional
  network_ipam_refs:
    type: string
    description: Reference to network-ipam this network is using. It has list of subnets that are being used as
    # required: optional
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix:
    type: string
    description: ip_prefix for the VirtualNetwork
    # required: optional
  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len:
    type: number
    description: ip_prefix_len for the VirtualNetwork
    # required: optional
  network_ipam_refs_data_ipam_subnets_default_gateway:
    type: string
    description: default-gateway ip address in the subnet, if not provided one is auto generated by the system.
    # required: optional
  network_ipam_refs_data_ipam_subnets_dns_server_address:
    type: string
    description: DNS server ip address in the subnet, if not provided one is auto generated by the system.
    # required: optional
  network_ipam_refs_data_ipam_subnets_enable_dhcp:
    type: boolean
    description: Enable DHCP for the VM(s) in this subnet
    # required: optional
  network_ipam_refs_data_ipam_subnets_dns_nameservers:
    type: string
    description: Tenant DNS servers ip address in tenant DNS method
    # required: optional
  network_ipam_refs_data_ipam_subnets_allocation_pools_start:
    type: string
    description: start for the VirtualNetwork
    # required: optional
  network_ipam_refs_data_ipam_subnets_allocation_pools_end:
    type: string
    description: end for the VirtualNetwork
    # required: optional
  network_ipam_refs_data_ipam_subnets_addr_from_start:
    type: boolean
    description: Start address allocation from start or from end of address range.
    # required: optional
  network_ipam_refs_data_ipam_subnets_dhcp_option_list_dhcp_option_dhcp_option_name:
    type: string
    description: Name of the DHCP option
    # required: true
  network_ipam_refs_data_ipam_subnets_dhcp_option_list_dhcp_option_dhcp_option_value:
    type: string
    description: Encoded DHCP option value (decimal)
    # required: true
  network_ipam_refs_data_ipam_subnets_dhcp_option_list_dhcp_option_dhcp_option_value_bytes:
    type: string
    description: Value of the DHCP option to be copied byte by byte
    # required: true
  network_ipam_refs_data_ipam_subnets_host_routes_route_prefix:
    type: string
    description: Ip prefix/len format prefix
    # required: optional
  network_ipam_refs_data_ipam_subnets_host_routes_route_next_hop:
    type: string
    description: Ip address or service instance name.
    # required: optional
  network_ipam_refs_data_ipam_subnets_host_routes_route_next_hop_type:
    type: string
    description: next_hop_type for the VirtualNetwork
    # required: optional
  network_ipam_refs_data_ipam_subnets_host_routes_route_community_attributes_community_attribute:
    type: string
    description: community_attribute for the VirtualNetwork
    # required: optional
  network_ipam_refs_data_ipam_subnets_subnet_name:
    type: string
    description: User provided name for this subnet
    # required: optional
  network_ipam_refs_data_ipam_subnets_alloc_unit:
    type: number
    description: allocation unit for this subnet to allocate bulk ip addresses
    # required: optional
  network_ipam_refs_data_host_routes_route_prefix:
    type: string
    description: Ip prefix/len format prefix
    # required: optional
  network_ipam_refs_data_host_routes_route_next_hop:
    type: string
    description: Ip address or service instance name.
    # required: optional
  network_ipam_refs_data_host_routes_route_next_hop_type:
    type: string
    description: next_hop_type for the VirtualNetwork
    # required: optional
  network_ipam_refs_data_host_routes_route_community_attributes_community_attribute:
    type: string
    description: community_attribute for the VirtualNetwork
    # required: optional
  # qos_config_refs:
  #   type: string
  #   description: Reference to QoS configuration for this virtual network.
  #   # required: optional
  network_policy_refs:
    type: string
    description: Reference to network-policy attached to this network. It has sequence number to specify attachment
    # required: optional
  network_policy_refs_data_sequence_major:
    type: number
    description: major for the VirtualNetwork
    # required: true
  network_policy_refs_data_sequence_minor:
    type: number
    description: minor for the VirtualNetwork
    # required: true
  network_policy_refs_data_timer_start_time:
    type: number
    description: start_time for the VirtualNetwork
    # required: true
  network_policy_refs_data_timer_on_interval:
    type: number
    description: on_interval for the VirtualNetwork
    # required: true
  network_policy_refs_data_timer_off_interval:
    type: number
    description: off_interval for the VirtualNetwork
    # required: true
  network_policy_refs_data_timer_end_time:
    type: number
    description: end_time for the VirtualNetwork
    # required: true
  project:
    type: string
    description: project for the VirtualNetwork
    # required: optional

resources:
  template_VirtualNetwork:
    type: OS::ContrailV2::VirtualNetwork
    properties:
      name: { get_param: name }
      fq_name: { get_param: fq_name }
      virtual_network_properties:
        {
          virtual_network_properties_allow_transit: { get_param: virtual_network_properties_allow_transit },
          virtual_network_properties_vxlan_network_identifier: { get_param: virtual_network_properties_vxlan_network_identifier },
          virtual_network_properties_forwarding_mode: { get_param: virtual_network_properties_forwarding_mode },
          virtual_network_properties_rpf: { get_param: virtual_network_properties_rpf },
          virtual_network_properties_mirror_destination: { get_param: virtual_network_properties_mirror_destination },
        }
      ecmp_hashing_include_fields:
        {
          ecmp_hashing_include_fields_hashing_configured: { get_param: ecmp_hashing_include_fields_hashing_configured },
          ecmp_hashing_include_fields_source_ip: { get_param: ecmp_hashing_include_fields_source_ip },
          ecmp_hashing_include_fields_destination_ip: { get_param: ecmp_hashing_include_fields_destination_ip },
          ecmp_hashing_include_fields_ip_protocol: { get_param: ecmp_hashing_include_fields_ip_protocol },
          ecmp_hashing_include_fields_source_port: { get_param: ecmp_hashing_include_fields_source_port },
          ecmp_hashing_include_fields_destination_port: { get_param: ecmp_hashing_include_fields_destination_port },
        }
      display_name: { get_param: display_name }
      router_external: { get_param: router_external }
      # import_route_target_list:
      #   {
      #     import_route_target_list_route_target: [{ get_param: import_route_target_list_route_target }],
      #   }
      provider_properties:
        {
          provider_properties_segmentation_id: { get_param: provider_properties_segmentation_id },
          provider_properties_physical_network: { get_param: provider_properties_physical_network },
        }
      # route_target_list:
      #   {
      #     route_target_list_route_target: [{ get_param: route_target_list_route_target }],
      #   }
      # export_route_target_list:
      #   {
      #     export_route_target_list_route_target: [{ get_param: export_route_target_list_route_target }],
      #   }
      flood_unknown_unicast: { get_param: flood_unknown_unicast }
      external_ipam: { get_param: external_ipam }
      multi_policy_service_chains_enabled: { get_param: multi_policy_service_chains_enabled }
      is_shared: { get_param: is_shared }
      route_table_refs: [{ get_param: route_table_refs }]
      network_ipam_refs: [{ get_param: network_ipam_refs }]
      network_ipam_refs_data:
        [{
          network_ipam_refs_data_ipam_subnets:
            [{
              network_ipam_refs_data_ipam_subnets_subnet:
                {
                  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix: { get_param: network_ipam_refs_data_ipam_subnets_subnet_ip_prefix },
                  network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len: { get_param: network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len },
                },
              network_ipam_refs_data_ipam_subnets_default_gateway: { get_param: network_ipam_refs_data_ipam_subnets_default_gateway },
              network_ipam_refs_data_ipam_subnets_dns_server_address: { get_param: network_ipam_refs_data_ipam_subnets_dns_server_address },
              network_ipam_refs_data_ipam_subnets_enable_dhcp: { get_param: network_ipam_refs_data_ipam_subnets_enable_dhcp },
              network_ipam_refs_data_ipam_subnets_dns_nameservers: [{ get_param: network_ipam_refs_data_ipam_subnets_dns_nameservers }],
              network_ipam_refs_data_ipam_subnets_allocation_pools:
                [{
                  network_ipam_refs_data_ipam_subnets_allocation_pools_start: { get_param: network_ipam_refs_data_ipam_subnets_allocation_pools_start },
                  network_ipam_refs_data_ipam_subnets_allocation_pools_end: { get_param: network_ipam_refs_data_ipam_subnets_allocation_pools_end },
                }],
              network_ipam_refs_data_ipam_subnets_addr_from_start: { get_param: network_ipam_refs_data_ipam_subnets_addr_from_start },
              network_ipam_refs_data_ipam_subnets_dhcp_option_list:
                {
                  network_ipam_refs_data_ipam_subnets_dhcp_option_list_dhcp_option:
                    [{
                      network_ipam_refs_data_ipam_subnets_dhcp_option_list_dhcp_option_dhcp_option_name: { get_param: network_ipam_refs_data_ipam_subnets_dhcp_option_list_dhcp_option_dhcp_option_name },
                      network_ipam_refs_data_ipam_subnets_dhcp_option_list_dhcp_option_dhcp_option_value: { get_param: network_ipam_refs_data_ipam_subnets_dhcp_option_list_dhcp_option_dhcp_option_value },
                      network_ipam_refs_data_ipam_subnets_dhcp_option_list_dhcp_option_dhcp_option_value_bytes: { get_param: network_ipam_refs_data_ipam_subnets_dhcp_option_list_dhcp_option_dhcp_option_value_bytes },
                    }],
                },
              network_ipam_refs_data_ipam_subnets_host_routes:
                {
                  network_ipam_refs_data_ipam_subnets_host_routes_route:
                    [{
                      network_ipam_refs_data_ipam_subnets_host_routes_route_prefix: { get_param: network_ipam_refs_data_ipam_subnets_host_routes_route_prefix },
                      network_ipam_refs_data_ipam_subnets_host_routes_route_next_hop: { get_param: network_ipam_refs_data_ipam_subnets_host_routes_route_next_hop },
                      network_ipam_refs_data_ipam_subnets_host_routes_route_next_hop_type: { get_param: network_ipam_refs_data_ipam_subnets_host_routes_route_next_hop_type },
                      network_ipam_refs_data_ipam_subnets_host_routes_route_community_attributes:
                        {
                          network_ipam_refs_data_ipam_subnets_host_routes_route_community_attributes_community_attribute: [{ get_param: network_ipam_refs_data_ipam_subnets_host_routes_route_community_attributes_community_attribute }],
                        },
                    }],
                },
              network_ipam_refs_data_ipam_subnets_subnet_name: { get_param: network_ipam_refs_data_ipam_subnets_subnet_name },
              network_ipam_refs_data_ipam_subnets_alloc_unit: { get_param: network_ipam_refs_data_ipam_subnets_alloc_unit },
            }],
          network_ipam_refs_data_host_routes:
            {
              network_ipam_refs_data_host_routes_route:
                [{
                  network_ipam_refs_data_host_routes_route_prefix: { get_param: network_ipam_refs_data_host_routes_route_prefix },
                  network_ipam_refs_data_host_routes_route_next_hop: { get_param: network_ipam_refs_data_host_routes_route_next_hop },
                  network_ipam_refs_data_host_routes_route_next_hop_type: { get_param: network_ipam_refs_data_host_routes_route_next_hop_type },
                  network_ipam_refs_data_host_routes_route_community_attributes:
                    {
                      network_ipam_refs_data_host_routes_route_community_attributes_community_attribute: [{ get_param: network_ipam_refs_data_host_routes_route_community_attributes_community_attribute }],
                    },
                }],
            },
        }]
      # qos_config_refs: [{ get_param: qos_config_refs }]
      network_policy_refs: [{ get_param: network_policy_refs }]
      network_policy_refs_data:
        [{
          network_policy_refs_data_sequence:
            {
              network_policy_refs_data_sequence_major: { get_param: network_policy_refs_data_sequence_major },
              network_policy_refs_data_sequence_minor: { get_param: network_policy_refs_data_sequence_minor },
            },
          network_policy_refs_data_timer:
            {
              network_policy_refs_data_timer_start_time: { get_param: network_policy_refs_data_timer_start_time },
              network_policy_refs_data_timer_on_interval: { get_param: network_policy_refs_data_timer_on_interval },
              network_policy_refs_data_timer_off_interval: { get_param: network_policy_refs_data_timer_off_interval },
              network_policy_refs_data_timer_end_time: { get_param: network_policy_refs_data_timer_end_time },
            },
        }]
      project: { get_param: project }

