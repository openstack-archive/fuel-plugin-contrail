heat_template_version: 2015-04-30

description: >
  HOT template to create a LoadbalancerListener:

parameters:
  name:
    type: string
    description: name for the LoadbalancerListener
    # required: optional
  fq_name:
    type: string
    description: fq_name for the LoadbalancerListener
    # required: optional
  loadbalancer_listener_properties_protocol:
    type: string
    description: protocol for the LoadbalancerListener
    # operations: CRUD
    # required: optional
  loadbalancer_listener_properties_protocol_port:
    type: number
    description: protocol_port for the LoadbalancerListener
    # operations: CRUD
    # required: optional
  loadbalancer_listener_properties_admin_state:
    type: boolean
    description: admin_state for the LoadbalancerListener
    # operations: CRUD
    # required: optional
  loadbalancer_listener_properties_connection_limit:
    type: number
    description: connection_limit for the LoadbalancerListener
    # operations: CRUD
    # required: optional
  loadbalancer_listener_properties_default_tls_container:
    type: string
    description: default_tls_container for the LoadbalancerListener
    # operations: CRUD
    # required: optional
  loadbalancer_listener_properties_sni_containers:
    type: string
    description: sni_containers for the LoadbalancerListener
    # operations: CRUD
    # required: optional
  display_name:
    type: string
    description: Display name user configured string(name) that can be updated any time. Used as openstack name.
    # operations: CRUD
    # required: optional
  project:
    type: string
    description: project for the LoadbalancerListener
    # required: optional

resources:
  Loadbalancer:
    type: OS::ContrailV2::Loadbalancer
    properties:
      name: Something
      project: { get_param: project }

  template_LoadbalancerListener:
    type: OS::ContrailV2::LoadbalancerListener
    properties:
      name: { get_param: name }
      fq_name: { get_param: fq_name }
      loadbalancer_listener_properties:
        {
          loadbalancer_listener_properties_protocol: { get_param: loadbalancer_listener_properties_protocol },
          loadbalancer_listener_properties_protocol_port: { get_param: loadbalancer_listener_properties_protocol_port },
          loadbalancer_listener_properties_admin_state: { get_param: loadbalancer_listener_properties_admin_state },
          loadbalancer_listener_properties_connection_limit: { get_param: loadbalancer_listener_properties_connection_limit },
          loadbalancer_listener_properties_default_tls_container: { get_param: loadbalancer_listener_properties_default_tls_container },
          loadbalancer_listener_properties_sni_containers: [{ get_param: loadbalancer_listener_properties_sni_containers }],
        }
      display_name: { get_param: display_name }
      loadbalancer_refs: [{ get_resource: Loadbalancer }]
      project: { get_param: project }

